{
    "dc": {
        "prefix": ";dc",
        "body": ["(use 'debux.core)$0"],
        "description" : "debux.core"
    },
    "dcs": {
        "prefix": ";dcs",
        "body": ["[debux.cs.core :refer-macros [clog clogn]] $0"],
        "description" : "debux.cs.core"
    },
    "dl": {
        "prefix": ";ld",
        "body": ["[philoskim/debux \"0.9.1\"]$0 "],
        "description" : "debux lein"
    },
    "dd": {
        "prefix": ";dd",
        "body": ["philoskim/debux {:mvn/version \"0.9.1\"}$0 "],
        "description" : "debux deps"
    },
    "cs": {
        "prefix": ";cs",
        "body": ["[clojure.str :as str]$0"],
        "description" : "clojure.string"
    },
    "hc": {
        "prefix": ";hc",
        "body": ["[homi.core :as homi]$0"],
        "description" : "homi.core"
    },
    "jsi": {
        "prefix": ";jsi",
        "body": ["[applied-science.js-interop :as j]"],
        "description": "js-interop"
    },
    "ms": {
        "prefix": ";ms",
        "body": ["{:malli/schema [:=> [:cat $0] ]}"],
        "description" : "malli/schema"
    },
    "ex": {
        "prefix": ";ex",
        "body": ["(is (true? (e/exists? driver (q/$0))))"],
        "description" : "etaoin exists"
    },
    "wi": {
        "prefix": ";wi",
        "body": ["(tu/wait-interval driver)"],
        "description" : "wait interval"
    },
    "ebc": {
        "prefix": ";ebc",
        "body": ["$0(is (= tu/error-bgcolor\n(e/get-element-css driver\n(q/select-with-error-css \"\")\n:background-color)))"],
        "description" : "error bgcolor"
    }
}
